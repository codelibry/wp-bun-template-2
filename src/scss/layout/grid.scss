$breakpoints: (
	small: 479px,
	medium: 767px,
	large: 1023px,
);

// need add if its need and add var in mixin
// $grid-columns-default: 12;
// $grid-columns-large: 8;
// $grid-columns-medium: 8;
// $grid-columns-small: 4;

$grid-column-gap-default: 16px;
$grid-column-gap-large: 16px;
$grid-column-gap-medium: 16px;
$grid-column-gap-small: 16px;

$grid-row-gap-default: 16px;
$grid-row-gap-large: 16px;
$grid-row-gap-medium: 16px;
$grid-row-gap-small: 16px;

.row {
	box-sizing: border-box;
	width: 100%;
	margin: 0 auto;
	display: flex;
	flex-wrap: wrap;
	gap: $grid-column-gap-default; /* Используем gap для отступов */

	&.row--center {
		justify-content: center;
	}

	&.row--right {
		justify-content: flex-end;
	}

	&.row--side {
		justify-content: space-between;
	}

	@include max-screen(large) {
		gap: $grid-column-gap-large;
	}

	@include max-screen(medium) {
		gap: $grid-column-gap-medium;
	}

	@include max-screen(small) {
		gap: $grid-column-gap-small;
	}
}

.col {
	box-sizing: border-box;
}

/* Общие стили для колонок */
@for $i from 1 through 12 {
	.col-#{$i} {
		flex: 0 0 calc((100% - (#{$grid-column-gap-default} * (12 / #{$i} - 1))) / 12 * #{$i});
		max-width: calc((100% - (#{$grid-column-gap-default} * (12 / #{$i} - 1))) / 12 * #{$i});
	}
}

@include max-screen(large) {
	@for $i from 1 through 8 {
		.col-lg-#{$i} {
			flex: 0 0 calc((100% - (#{$grid-column-gap-large} * (8 / #{$i} - 1))) / 8 * #{$i});
			max-width: calc((100% - (#{$grid-column-gap-large} * (8 / #{$i} - 1))) / 8 * #{$i});
		}
	}
}

@include max-screen(medium) {
	@for $i from 1 through 8 {
		.col-md-#{$i} {
			flex: 0 0 calc((100% - (#{$grid-column-gap-medium} * (8 / #{$i} - 1))) / 8 * #{$i});
			max-width: calc((100% - (#{$grid-column-gap-medium} * (8 / #{$i} - 1))) / 8 * #{$i});
		}
	}
}

@include max-screen(small) {
	.col {
		flex: 0 0 100%; /* На мобилках колонки занимают 100% ширины */
		max-width: 100%;
	}
}
